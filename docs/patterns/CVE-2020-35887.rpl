pattern CVE-2020-35887

patt {
    pattern_unchecked_ptr_offset[$T: ty, $U: ty] =
        fn $pattern($len: $U, ..) -> _ {
            'ptr:
            let $ptr: *const $T = _;
            'offset:
            let $ptr_1: *const $T = Offset(copy $ptr, copy $len);
        }
    pattern_unchecked_mut_ptr_offset[$T: ty, $U: ty]
        fn $pattern($len: $U, ..) -> _ {
            'ptr:
            let $ptr: *mut $T = _;
            'offset:
            let $ptr_1: *mut $T = Offset(copy $ptr, copy $len);
        }
    pattern_unchecked_ptr_casted_offset[$T: ty, $U1: ty, $U2: ty]
        fn $pattern($len: $U, ..) -> _ {
            let $len2: $U2 = copy $len as $U2 (IntToInt);
            'ptr:
            let $ptr: *const $T = _;
            'offset:
            let $ptr_1: *const $T = Offset(copy $ptr, copy $len2);
        }
    pattern_unchecked_mut_ptr_casted_offset[$T: ty, $U1: ty, $U2: ty]
        fn $pattern($len: $U, ..) -> _ {
            let $len2: $U2 = copy $len as $U2 (IntToInt);
            'ptr:
            let $ptr: *mut $T = _;
            'offset:
            let $ptr_1: *mut $T = Offset(copy $ptr, copy $len2);
        }
    pattern_unchecked_ptr_arith_offset[$T: ty, $U: ty]
        fn $pattern($len: $U, ..) -> _ {
            'ptr:
            let $ptr: *const $T = _; // _8
            'offset:
            let $ptr_1: *const $T = std::intrinsics::arith_offset::<$T>(copy $ptr, copy $len); // _7
        }
    pattern_unchecked_mut_ptr_arith_offset[$T: ty, $U: ty]
        fn $pattern($len: $U, ..) -> _ {
            'ptr:
            let $ptr: *mut $T = _; // _8
            'offset:
            let $ptr_1: *mut $T = std::intrinsics::arith_offset::<$T>(copy $ptr, copy $len); // _7
        }
    pattern_unchecked_ptr_casted_arith_offset[$T: ty, $U1: ty, $U2: ty]
        fn $pattern($len: $U, ..) -> _ {
            let $len2: $U2 = copy $len as $U2 (IntToInt); // _6
            'ptr:
            let $ptr: *const $T = _; // _8
            'offset:
            let $ptr_1: *const $T = std::intrinsics::arith_offset::<$T>(copy $ptr, copy $len2); // _7
        }
    pattern_unchecked_mut_ptr_casted_arith_offset[$T: ty, $U1: ty, $U2: ty]
        fn $pattern($len: $U, ..) -> _ {
            let $len2: $U2 = copy $len as $U2 (IntToInt); // _6
            'ptr:
            let $ptr: *mut $T = _; // _8
            'offset:
            let $ptr_1: *mut $T = std::intrinsics::arith_offset::<$T>(copy $ptr, copy $len2); // _7
        }
}
