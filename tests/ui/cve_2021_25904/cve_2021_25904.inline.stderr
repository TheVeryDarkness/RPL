error: it is an undefined behavior to offset a pointer using an unchecked integer
  --> tests/ui/cve_2021_25904/cve_2021_25904.rs:213:24
   |
LL |         self.comp_info.iter()
   |                        ^^^^^^
   |                        |
   |                        offset here
   |                        pointer used here
   |
   = help: check whether it's in bound before offsetting
   = note: See the safety section in https://doc.rust-lang.org/std/primitive.pointer.html#method.offset
   = note: `-D rpl::unchecked-pointer-offset` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(rpl::unchecked_pointer_offset)]`

error: it is an undefined behavior to offset a pointer using an unchecked integer
  --> tests/ui/cve_2021_25904/cve_2021_25904.rs:450:41
   |
LL |             let mut f_iter = fmt.format.iter();
   |                                         ^^^^^^
   |                                         |
   |                                         offset here
   |                                         pointer used here
   |
   = help: check whether it's in bound before offsetting
   = note: See the safety section in https://doc.rust-lang.org/std/primitive.pointer.html#method.offset

error: it is unsound to trust pointers from passed-in iterators in a public safe function
  --> tests/ui/cve_2021_25904/cve_2021_25904.rs:443:50
   |
LL |     pub fn copy_from_raw_parts<I, IU>(&mut self, mut src: I, mut src_linesize: IU)
   |                                                  ^^^^^^^ source iterator found here
...
LL |                 let rr = src.next().unwrap();
   |                                     -------- pointer created here
...
LL |                 let ss = unsafe { slice::from_raw_parts(rr, hb * s_linesize) };
   |                                   ------------------------------------------ used here to create a slice from the pointer
   |
   = help: consider marking the function as unsafe
   = note: `#[deny(rpl::unvalidated_slice_from_raw_parts)]` on by default

error: aborting due to 3 previous errors

